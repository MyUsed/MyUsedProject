<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>
<sqlMap namespace="order">
	
	<insert id="insertOrderlist" parameterClass="java.util.Map">
		insert into orderlist values(orderlist_seq.NEXTVAL, 
									#buy_memnum#,
									#buy_id#,
									#buy_name#,
									#sell_pronum#,
									#sell_memnum#,
									#sell_id#,
									#sell_name#,
									#sell_categ#,
									#sell_propic#,
									#send_name#,
									#send_ph#,
									#send_adrnum#,
									#send_addr#,
									#send_addrr#,
									#buy_price#,
									default,
									sysdate
									)
	</insert>
	
	 	<!-- orderlist 전체 꺼내는 쿼리 -->
	<select id="selectOrderlist" resultClass="product.orderlistDTO">
		select * from orderlist order by seq_num desc
	</select>
		<!-- orderlist 에서 게시글번호  꺼내는 쿼리 -->
	<select id="selectProNum" resultClass="int" parameterClass="int">
		select sell_pronum from orderlist where seq_num = #seq_num#
	</select>
		<!-- orderlist 에서 판매회원번호 꺼내는 쿼리 -->
	<select id="selectMem_num" resultClass="int" parameterClass="int" >
		select sell_memnum from orderlist where sell_pronum = #pro_num#
	</select>
	
		<!-- 회원번호를 기준으로 최신 주문내역 가져오기 -->
	<select id="buyOrderlist" resultClass="product.orderlistDTO" parameterClass="int">
		select * from orderlist where buy_memnum = #mem_num# and seq_num = (select max(seq_num) from orderlist)	
	</select>
		<!-- 개인의 구매내역을 가져옴  -->
	<select id="butOrderAll" resultClass="product.orderlistDTO" parameterClass="int">
		select * from orderlist where buy_memnum = #mem_num# order by seq_num desc
	</select>

		<!-- 시퀀스로 orderlist 찾아 꺼내는 쿼리  -->
	<select id="noticeOrderlist" resultClass="product.orderlistDTO" parameterClass="int">
		select * from orderlist where seq_num = #seq_num#
	</select>
	
		<!-- 입금확인을 처리하기위한 state 업데이트 -->
	<update id="updateState" parameterClass="int">
		update orderlist set state = state+1 where seq_num = #seq_num#
	</update>
	
	
		<!-- 거래중 처리하기위한 proboardlist 업데이트 -->
	<update id="updateProboardlist" parameterClass="int">
		update proboardlist set sendpay = null where num = #pro_num#
	</update>
	
		<!-- 거래중 처리를 위한 개인DB 업데이트  -->
	<update id="updateProboard" parameterClass="java.util.Map">
		update proboard_$mem_num$ set sendpay = null where num = (select num from proboard_$mem_num$ where reg = (select reg from proboardlist where num = $pro_num$))
	</update>
		
		
		<!-- notice 테이블에 값 삽입 -->
	<insert id="insertNotice" parameterClass="java.util.Map">
		insert into notice_$num$ values(notice_$num$seq.NEXTVAL,#board_num#,#pro_num#,#call_memnum#,#call_name#,#categ#,#state#,sysdate)	
	</insert>
	
		<!-- notice 업데이트 읽은 것 상태 0 으로 변경 상품-->
	<update id="updateNotice" parameterClass="java.util.Map">
		update notice_$num$ set state = 0 where pro_num = #pro_num# and categ = 'product'
	</update>
	
		<!-- notice 업데이트 읽은 것 상태 0 으로 변경 메시지 -->
	<update id="updateNoticeMsg" parameterClass="java.util.Map">
		update notice_$mynum$ set state = 0 where call_memnum = #memnum# and categ = 'msg'
	</update>
	
		<!-- notice 업데이트 읽은 것 상태 0 으로 변경 친구요청 -->
	<update id="updateNoticeFriend" parameterClass="java.util.Map">
		update notice_$mynum$ set state = 0 where call_memnum = #memnum# and categ = 'friend'
	</update>
	
		<!-- notice 업데이트 읽은 것 상태 0으로 변경 사람태그 -->
	<update id="updateNoticeTeg" parameterClass="java.util.Map">
		update notice_$mem$ set state = 0 where board_num = #mynum# and categ = 'board'
	</update>
	
		<!-- notice 업데이트 읽은 것 상태 0으로 변경 배송처리 -->
	<update id="updateNoticePost" parameterClass="java.util.Map">
		update notice_$mynum$ set state = 0 where pro_num = #pro_num# and categ = 'post'
	</update>
	
		<!-- notice 업데이트 읽은 것 상태 0으로 변경 정보수정처리 -->
	<update id="updateNoticeModifyR" parameterClass="java.util.Map">
		update notice_$mynum$ set state = 0 where call_memnum = #mynum# and categ = 'modify_reject'
	</update>
		<!-- notice 업데이트 읽은 것 상태 0으로 변경 정보수정처리 -->
	<update id="updateNoticeModifyP" parameterClass="java.util.Map">
		update notice_$mynum$ set state = 0 where call_memnum = #mynum# and categ = 'modify_permit'
	</update>
	
	
	
	
		<!-- 배송확인 처리를 하기위한 업데이트  -->
	<update id="updateOrderlist" parameterClass="int">
		update orderlist set state = 2 where sell_pronum = #pro_num#
	</update>
	
		<!-- 알림 갯수 뽑아내기 -->
	<select id="NoticeCount" parameterClass="int" resultClass="int">
		select count(*) from notice_$num$ where state = 1
	</select>
	
		<!-- orderlist에서 기간별로 조회  -->
	<select id="RegSearchOrderlist" parameterClass="java.util.Map" resultClass="product.orderlistDTO">
		select * from orderlist where reg between #beginReg# and #endReg# order by reg desc
	</select>
	
		<!-- 회원번호별 검색 -->
	<select id="memnumSearchOrderlist" parameterClass="int" resultClass="product.orderlistDTO">
		select * from orderlist where buy_memnum = #text#
	</select>
		<!-- 상품번호별 검색 -->
	<select id="pronumSearchOrderlist" parameterClass="int" resultClass="product.orderlistDTO">
		select * from orderlist where sell_pronum = #text#
	</select>
	
	
</sqlMap>